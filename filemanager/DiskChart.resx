<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEACABoBQAAFgAAACgAAAAQAAAAIAAAAAEACAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAB
        AAAAAAAAZGRkAD5GRgBLS0sA8OjoAFpaWgCupqYAd3d3AFFSUgBgX18AQ0NDAAEFBQDMvLwA////AA4R
        EQBLS0sAaWhoAH99fQCEgYEAg4CAAHh1dQBbXV0ANDw8AB0dHQBpaWkAl5eXAMXBwQDg19cA2sbGALem
        pgCEfHwAUVJSAAAAAAB0dHQAtLS0AJmJiQBQUFAAaWlpALS0tACSgoIANzo6AEdHRwCXl5cAZ2JiAAAA
        AABpZ2cAxK6uAJeLiwAhJCQAgHd3AOK4uADx4u8AtKOqAMSqsgC8rKwAOTk5AIp/fwC2pqgALjAvAGVd
        XADdx8oAzbm5AENCQgCHgoIAwqywAGBbWQCKh4YAzKqqAEA+PgB6d3cA3MjIANu3yQDjytoAtZiYACor
        KwBeX18AuqmpAIN5eQAMDg4AEyIiAIh/fwBCQ0MAAAAAAFFTUwCdjIwAZmZmAAwMDABTU1MAlIODAMjI
        yABmZmYAFRUVAAAAAAA5OzsAaWRkAJqNjQC/rq4Azr+/AMvAwACyrKwAgX9/AEJCQgANDQ0AAAAAAAQG
        BgAkJiYAOzs7AERDQwA/Pj4AKisrAA8QEAAAAAAA693dAOrX1wDw8PAA//v7AP/x8QD/6+sA/+bmAP/i
        4gD+29sA4sHBAPn5+QD///8A//39AP/t7QD/5eUA/+DgAP/b2wD/1tYA/9PTAOzBwQDv7+8A////AP/w
        8AD/3+MA/9vdAP/W1gD/0dEA/87OAP/R0QDYubkA/+zsAP/4+AD///8A//7/AP/u/AD/1/YA/9rzAP/a
        4gD/zs4A/9DQAP/V1QD72NgA/83NAP/T0wD/4+IA//T6APvi7QD/290A/9XVAP/b2wD/4uIA7cXFAP/R
        0QD/z88A/9LSAP/s8QD/6ewA/9bWAP/b2wD/4eEA7NfXAP/k5AD/3t4A/9zcAP/t8wDj1doA/+boAP/N
        zQD/zc0A/8/PAP/i4gD/3NwA/9bWAP/e4wD52uwA/vL+AP/4+QD/6ekA/9nZAP/Q0AD/3NwA/9bWAP/R
        0QD/zs4A/9XeAP/V7QD/3e8A//b6AP/9/QD36+sA5MPDAP/T0wD/zs4A/9DQAP/V1AD/2toA/+DfAP/y
        8QDHyMgA78PDAP/R0QD/1dUA/9raAP/g4AD/5eUA/+7uAP/9/QDc3NwA2rq6APvY2AD/4uIA/+joAP/t
        7QD/8vIA9/PzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAADmhpamtsbW5vAAAAAAAADV1eX2BhYmNkZWZnAAALDFdY3N3e3+Dh4llaW1wACVNU09TV
        1tfY2dp721VWCk9QysvMzc7P0NF7e3vSUVJLTMDBwsPExcbHe3vIyU1ORUa2t7i5ukdIu7y9vr9JSj+s
        ra6vsEBBQrGys7S1Q0Q4o6Slpqc5Ojs8qKmqqz0+MTKam5ydMzQ1np+goaI2Ny0ujo+QkZKTlJWWl5iZ
        LzApKoR7e4WGh4iJiouMjSssByUment8fX5/gIGCgycoCAUgISJyc3R1dnd4eSMkBgAAAxcYGRobcHEc
        HR4fBAAAAAAAAQ8QERITFBUWAgAAAPAPAADgAwAAwAEAAIABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAIABAACAAwAAwAcAAPAPAAA=
</value>
  </data>
</root>